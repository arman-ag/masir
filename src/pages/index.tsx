import { Card } from '@/components/common/Card';
import { Loading } from '@/components/common/Loading';
import Layout from '@/components/layout';
import { SearchBar } from '@/components/mainPage/SearchBar';
import { Select } from '@/components/mainPage/Select';
import { countryDetailsType } from '@/types/countryTypes';
import { dataPropsType, dataType } from '@/types/mainTypes';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { api } from './api';

export default function Home({ data: countries }: dataPropsType) {
  const [filterCountries, setFilterCountries] = useState<dataType[]>();
  // console.log({ countries });
  const [filterOn, SetFilterOn] = useState(false);
  const [searchWord, setSearchWord] = useState<string>('');
  const [searchResult, setSearchResult] = useState<countryDetailsType>();
  const router = useRouter();
  //region select
  const [selected, setSelected] = useState({ name: 'Filter by Region' });

  // get filter data
  useEffect(() => {
    if (Object.keys(router.query)) {
      const searchRequest = async () => {
        try {
          if (router?.query?.region) {
            const res = await api.getFilterResult(router?.query?.region);
            const result: dataType[] = res?.data;
            setFilterCountries(result);
          }
        } catch (err) {
          console.log(err);
        }
      };
      searchRequest();
    }
  }, [router.query]);

  //add filter query string
  useEffect(() => {
    if (selected.name !== 'Filter by Region') {
      router.push(`?region=${selected?.name}`, undefined, { shallow: true });
      SetFilterOn(true);
    }
  }, [selected]);

  //search throw all receive data
  useEffect(() => {
    const searchWordArray = searchWord.toLowerCase().split('');
    const searchResult = countries.filter((item) => {
      const countryNameArray = item.name.common.toLowerCase().split('');
      return searchWordArray.every((searchLetter) =>
        countryNameArray.includes(searchLetter)
      );
    });
    setFilterCountries(searchResult);
    SetFilterOn(true);
  }, [searchWord]);
  //sort
  // useEffect(() => {
  //   const numAscending = [...countries].sort(
  //     (a, b) => a.name.common > b.name.common
  //   );
  //   console.log('numAscending', numAscending);

  // }, []);

  return (
    <>
      <Head>
        <title>Masir REST Countries API</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <Layout>
          <div className='flex flex-col justify-center sm:justify-between mb-7 relative flex-wrap sm:flex-row'>
            <SearchBar setSearchWord={setSearchWord} />
            <Select selected={selected} setSelected={setSelected} />
          </div>
          <div className=' flex justify-center sm:justify-between flex-wrap align-baseline  gap-y-12'>
            {filterOn ? (
              filterCountries?.length === 0 ? (
                <Loading />
              ) : (
                filterCountries?.map((item, index) => {
                  return (
                    <Card
                      region={item?.region}
                      capital={item?.capital}
                      alt={item?.flags?.alt}
                      country={item?.name.common}
                      key={index}
                      flag={item.flags.svg}
                      population={item.population}
                    />
                  );
                })
              )
            ) : (
              countries?.map((item, index) => {
                return (
                  <Card
                    region={item?.region}
                    capital={item?.capital}
                    alt={item?.flags?.alt}
                    country={item?.name.common}
                    key={index}
                    flag={item.flags.svg}
                    population={item.population}
                  />
                );
              })
            )}
          </div>
        </Layout>
      </main>
    </>
  );
}
export async function getServerSideProps() {
  const baseUrl = 'https://restcountries.com/v3.1';
  const res = await fetch(`${baseUrl}/all`);
  const data = await res.json();
  return { props: { data } };
}
